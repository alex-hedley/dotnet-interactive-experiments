{"event":{"kernelInfos":[{"aliases":[],"languageName":null,"languageVersion":null,"isProxy":false,"isComposite":true,"displayName":".NET","localName":".NET","uri":"kernel://pid-11275","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"Quit"}],"supportedDirectives":[{"name":"#!sql"},{"name":"#!kql"},{"name":"#!csharp"},{"name":"#!fsharp"},{"name":"#!pwsh"},{"name":"#!html"},{"name":"#!value"},{"name":"#!mermaid"},{"name":"#!lsmagic"},{"name":"#!markdown"},{"name":"#!time"},{"name":"#!log"},{"name":"#!about"},{"name":"#!import"},{"name":"#!connect"},{"name":"#!javascript"},{"name":"#!enable-http"}]},{"aliases":[],"languageName":"SQL","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"sql - SQL","localName":"sql","uri":"kernel://pid-11275/sql","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!lsmagic"}]},{"aliases":[],"languageName":"KQL","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"kql - KQL","localName":"kql","uri":"kernel://pid-11275/kql","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!lsmagic"}]},{"aliases":["c#","C#"],"languageName":"C#","languageVersion":"11.0","isProxy":false,"isComposite":false,"displayName":"csharp - C# Script","localName":"csharp","uri":"kernel://pid-11275/csharp","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"RequestCompletions"},{"name":"RequestDiagnostics"},{"name":"RequestHoverText"},{"name":"RequestSignatureHelp"},{"name":"RequestValue"},{"name":"RequestValueInfos"},{"name":"SendValue"},{"name":"SubmitCode"},{"name":"ChangeWorkingDirectory"}],"supportedDirectives":[{"name":"#i"},{"name":"#r"},{"name":"#!nuget-restore"},{"name":"#!who"},{"name":"#!whos"},{"name":"#!share"},{"name":"#!set"},{"name":"#!lsmagic"}]},{"aliases":["f#","F#"],"languageName":"F#","languageVersion":"7.0","isProxy":false,"isComposite":false,"displayName":"fsharp - F# Script","localName":"fsharp","uri":"kernel://pid-11275/fsharp","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"ChangeWorkingDirectory"},{"name":"SubmitCode"},{"name":"SendValue"},{"name":"RequestValue"},{"name":"RequestValueInfos"},{"name":"RequestHoverText"},{"name":"RequestDiagnostics"},{"name":"RequestCompletions"}],"supportedDirectives":[{"name":"#i"},{"name":"#r"},{"name":"#!nuget-restore"},{"name":"#!who"},{"name":"#!whos"},{"name":"#!share"},{"name":"#!set"},{"name":"#!lsmagic"}]},{"aliases":["powershell"],"languageName":"PowerShell","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"pwsh - PowerShell","localName":"pwsh","uri":"kernel://pid-11275/pwsh","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"RequestCompletions"},{"name":"RequestDiagnostics"},{"name":"RequestValueInfos"},{"name":"RequestValue"},{"name":"SendValue"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!share"},{"name":"#!set"},{"name":"#!lsmagic"}]},{"aliases":[],"languageName":"HTML","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"html - HTML","localName":"html","uri":"kernel://pid-11275/html","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!lsmagic"}]},{"aliases":[],"languageName":null,"languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"value - Raw Value Storage","localName":"value","uri":"kernel://pid-11275/value","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"RequestValueInfos"},{"name":"RequestValue"},{"name":"SendValue"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!who"},{"name":"#!whos"},{"name":"#!lsmagic"}]},{"aliases":[],"languageName":"Mermaid","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"mermaid - Mermaid","localName":"mermaid","uri":"kernel://pid-11275/mermaid","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"SubmitCode"}],"supportedDirectives":[{"name":"#!lsmagic"}]},{"aliases":["js"],"languageName":"JavaScript","languageVersion":null,"isProxy":false,"isComposite":false,"displayName":"javascript - JavaScript","localName":"javascript","uri":"kernel://pid-11275/javascript","remoteUri":null,"supportedKernelCommands":[{"name":"RequestKernelInfo"},{"name":"SubmitCode"},{"name":"SendValue"}],"supportedDirectives":[{"name":"#!share"},{"name":"#!set"}]}]},"eventType":"KernelReady","command":null,"routingSlip":[]}
{"event":{"formattedValues":[{"mimeType":"text/html","value":"\r\n<div>\r\n    <div id='dotnet-interactive-this-cell-11275.Microsoft.DotNet.Interactive.Http.HttpPort' style='display: none'>\r\n        The below script needs to be able to find the current output cell; this is an easy method to get it.\r\n    </div>\r\n    <script type='text/javascript'>\r\nasync function probeAddresses(probingAddresses) {\r\n    function timeout(ms, promise) {\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                reject(new Error('timeout'))\r\n            }, ms)\r\n            promise.then(resolve, reject)\r\n        })\r\n    }\r\n\r\n    if (Array.isArray(probingAddresses)) {\r\n        for (let i = 0; i < probingAddresses.length; i++) {\r\n\r\n            let rootUrl = probingAddresses[i];\r\n\r\n            if (!rootUrl.endsWith('/')) {\r\n                rootUrl = `${rootUrl}/`;\r\n            }\r\n\r\n            try {\r\n                let response = await timeout(1000, fetch(`${rootUrl}discovery`, {\r\n                    method: 'POST',\r\n                    cache: 'no-cache',\r\n                    mode: 'cors',\r\n                    timeout: 1000,\r\n                    headers: {\r\n                        'Content-Type': 'text/plain'\r\n                    },\r\n                    body: probingAddresses[i]\r\n                }));\r\n\r\n                if (response.status == 200) {\r\n                    return rootUrl;\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadDotnetInteractiveApi() {\r\n    probeAddresses([\"http://192.168.0.3:9000/\", \"http://127.0.0.1:9000/\"])\r\n        .then((root) => {\r\n        // use probing to find host url and api resources\r\n        // load interactive helpers and language services\r\n        let dotnetInteractiveRequire = require.config({\r\n        context: '11275.Microsoft.DotNet.Interactive.Http.HttpPort',\r\n                paths:\r\n            {\r\n                'dotnet-interactive': `${root}resources`\r\n                }\r\n        }) || require;\r\n\r\n            window.dotnetInteractiveRequire = dotnetInteractiveRequire;\r\n\r\n            window.configureRequireFromExtension = function(extensionName, extensionCacheBuster) {\r\n                let paths = {};\r\n                paths[extensionName] = `${root}extensions/${extensionName}/resources/`;\r\n                \r\n                let internalRequire = require.config({\r\n                    context: extensionCacheBuster,\r\n                    paths: paths,\r\n                    urlArgs: `cacheBuster=${extensionCacheBuster}`\r\n                    }) || require;\r\n\r\n                return internalRequire\r\n            };\r\n        \r\n            dotnetInteractiveRequire([\r\n                    'dotnet-interactive/dotnet-interactive'\r\n                ],\r\n                function (dotnet) {\r\n                    dotnet.init(window);\r\n                },\r\n                function (error) {\r\n                    console.log(error);\r\n                }\r\n            );\r\n        })\r\n        .catch(error => {console.log(error);});\r\n    }\r\n\r\n// ensure `require` is available globally\r\nif ((typeof(require) !==  typeof(Function)) || (typeof(require.config) !== typeof(Function))) {\r\n    let require_script = document.createElement('script');\r\n    require_script.setAttribute('src', 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js');\r\n    require_script.setAttribute('type', 'text/javascript');\r\n    \r\n    \r\n    require_script.onload = function() {\r\n        loadDotnetInteractiveApi();\r\n    };\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(require_script);\r\n}\r\nelse {\r\n    loadDotnetInteractiveApi();\r\n}\r\n\r\n    </script>\r\n</div>"}],"valueId":"2e68bb96-1529-4a5f-b43f-82fecd6cc6c4"},"eventType":"DisplayedValueProduced","command":{"token":"c0d85e52-3c5a-3187-ee81-07a6ddb82c7d::5","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":[]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n"},"eventType":"CodeSubmissionReceived","command":{"token":"deferredCommand::441c669a18cb496b84058e53aa078177","id":"39c90bada51a4254bd0cdf1b593a7dd5","commandType":"SubmitCode","command":{"code":"\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n"},"eventType":"CompleteCodeSubmissionReceived","command":{"token":"deferredCommand::441c669a18cb496b84058e53aa078177","id":"39c90bada51a4254bd0cdf1b593a7dd5","commandType":"SubmitCode","command":{"code":"\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n"},"eventType":"CodeSubmissionReceived","command":{"token":"deferredCommand::54b017b941c643e58b9807edb21fc270","id":"d3d62d118985439d8bb9715900c60a92","commandType":"SubmitCode","command":{"code":"\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n"},"eventType":"CompleteCodeSubmissionReceived","command":{"token":"deferredCommand::54b017b941c643e58b9807edb21fc270","id":"d3d62d118985439d8bb9715900c60a92","commandType":"SubmitCode","command":{"code":"\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"Console.WriteLine(\"a\");"},"eventType":"CodeSubmissionReceived","command":{"token":"c0d85e52-3c5a-3187-ee81-07a6ddb82c7d::5","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"Console.WriteLine(\"a\");"},"eventType":"CompleteCodeSubmissionReceived","command":{"token":"c0d85e52-3c5a-3187-ee81-07a6ddb82c7d::5","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"formattedValues":[{"mimeType":"text/plain","value":"a\n"}],"valueId":null},"eventType":"StandardOutputValueProduced","command":{"token":"c0d85e52-3c5a-3187-ee81-07a6ddb82c7d::5","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"executionOrder":0},"eventType":"CommandSucceeded","command":{"token":"c0d85e52-3c5a-3187-ee81-07a6ddb82c7d::5","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived","kernel://pid-11275/csharp","kernel://pid-11275/"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"Console.WriteLine(\"a\");"},"eventType":"CodeSubmissionReceived","command":{"token":"d0a73a9a-442e-e43a-dbd3-81f37caa08d3::1","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"code":"Console.WriteLine(\"a\");"},"eventType":"CompleteCodeSubmissionReceived","command":{"token":"d0a73a9a-442e-e43a-dbd3-81f37caa08d3::1","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"formattedValues":[{"mimeType":"text/plain","value":"a\n"}],"valueId":null},"eventType":"StandardOutputValueProduced","command":{"token":"d0a73a9a-442e-e43a-dbd3-81f37caa08d3::1","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}
{"event":{"executionOrder":0},"eventType":"CommandSucceeded","command":{"token":"d0a73a9a-442e-e43a-dbd3-81f37caa08d3::1","id":"","commandType":"SubmitCode","command":{"code":"Console.WriteLine(\"a\");","submissionType":"run","targetKernelName":"csharp","originUri":null,"destinationUri":null},"routingSlip":["kernel://pid-11275/?tag=arrived","kernel://pid-11275/csharp?tag=arrived","kernel://pid-11275/csharp","kernel://pid-11275/"]},"routingSlip":["kernel://pid-11275/csharp","kernel://pid-11275/"]}